{"version":3,"sources":["spotify.js","component/Login.js","DataLayer.js","component/SidebarOption.js","component/Sidebar.js","component/Header.js","component/SongRow.js","component/Body.js","component/Footer.js","component/Player.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","reducer","initialState","children","Provider","value","useReducer","useDataLayerValue","useContext","SidebarOption","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","spotify","user","style","border","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","token","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","console","log","setAccessToken","getMe","then","getUserPlaylists","getPlaylist","response","state","action","Boolean","hostname","match","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65c7b8e5.chunk.js","sourcesContent":["\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri =\"http://localhost:3000/\"\nconst clientId =\"20231a0c79084144b0e3961c50bff2f9\"\n\nconst scopes = [\n    \"user-read-currently-playing\",\n    \"user-read-recently-played\",\n    \"user-top-read\",\n    \"user-modify-playback-state\",\n];\n\nexport const getTokenFromUrl = ()=>{\n    return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial,item) =>{\n        var parts = item.split(\"=\");\n        initial[parts[0]] = \n        decodeURIComponent(parts[1]);\n        return initial;\n    },{});\n}\n\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scopes=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;","import React from 'react'\nimport './Login.css';\nimport {loginUrl} from '../spotify';\nfunction Login() {\n    return (\n        <div className=\"login\">\n            <img\n             src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n             alt=\"\"\n             />\n\n             <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n            \n            \n        </div>\n    )\n}\n\nexport default Login\n","import React, {createContext, useContext, useReducer } from 'react'\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({reducer, initialState,children}) =>(\n    <DataLayerContext.Provider value = {useReducer(reducer,initialState)}>\n        {children}\n    </DataLayerContext.Provider>\n\n\n);\n\nexport const useDataLayerValue = () =>useContext(DataLayerContext);\n \n ","import React from 'react'\nimport './SidebarOption.css';\n\nfunction SidebarOption({title,Icon}) {\n    return (\n        <div className=\"sidebarOption\">\n            {Icon && <Icon className=\"sidebarOption__icon\" />}\n           {Icon ? <h4>{title}</h4> :<p>{title}</p>}  \n             \n            \n        </div>\n    )\n}\n\nexport default SidebarOption\n","import React from 'react'\nimport './Sidebar.css';\nimport SidebarOption from './SidebarOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic'\nimport { useDataLayerValue} from '../DataLayer';\nfunction Sidebar() {\n    const [{playlists}, dispatch] = useDataLayerValue();\n    return (\n        <div className=\"sidebar\">\n            <img\n              className=\"sidebar__logo\"\n              src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n              alt=\"\"\n              />\n              <SidebarOption Icon={HomeIcon} title=\"Home\"/>\n              <SidebarOption Icon={SearchIcon} title=\"Search\" />\n              <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\n            <br/>\n            <strong className=\"sidebar__title\">PLAYlIST</strong>\n            <hr/>\n            {playlists?.items?.map(playlist =>(\n                <SidebarOption title={playlist.name} />\n\n            ))}\n            \n            \n        </div>\n    )\n}\n\n\nexport default Sidebar\n","import React from 'react'\nimport './Header.css';\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Avatar } from '@material-ui/core';\nimport { useDataLayerValue } from '../DataLayer';\nfunction Header({spotify}) {\n    const [{user}, dispatch] = useDataLayerValue();\n    return (\n        <div className=\"header\">\n            <div className=\"header__left\">\n                <SearchIcon />\n                <input style={{border:\"none\"}} \n                 placeholder=\"Search for Artist, Songs\"\n                 type=\"text\"\n                 />\n            </div>\n            <div className=\"header__right\">\n                <Avatar \n                 src={user?.images[0]?.url}\n                 alt=\"useAvatar\"\n                 />\n                <h4>{user?.display_name}</h4>\n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './SongRow.css';\nfunction SongRow({track}) {\n    return (\n        <div className=\"songRow\">\n            <img \n            className=\"songRow__image\"\n              src={track.album.images[0].url} \n             alt=\"\" />\n            <div className=\"songRow__info\">\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artist) => artist.name).join(\", \")} -{\"\"}\n                    {track.album.name}\n                </p>\n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default SongRow\n","import React from 'react'\nimport './Body.css';\nimport Header from '../component/Header';\nimport { useDataLayerValue } from '../DataLayer';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from '../component/SongRow';\n\nfunction Body({spotify}) {\n    const [{discover_weekly},dispatch] =useDataLayerValue();\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify}/>\n            <div className=\"body__info\">\n                <img\n                  src={discover_weekly?.images[0].url}\n                  alt=\"\"\n                  />\n            <div className=\"body__infoText\">\n                <strong>PLAYLISTS</strong>\n                <h2>Discover Weekly</h2>\n                <p>{discover_weekly?.description}</p>\n            </div>\n         </div>\n         <div className=\"body__songs\">\n             <div className=\"body__icons\">\n                 <PlayCircleFilledIcon className=\"body__suffle\"/>\n                 <FavoriteIcon  fontSize=\"large\"/>\n                 <MoreHorizIcon />\n             </div>\n             {discover_weekly?.tracks.items.map(item =>(\n                 <SongRow track={item.track} />\n             ))}\n\n         </div>\n\n        </div>\n    )\n}\n\nexport default Body\n","import React from 'react'\nimport './Footer.css';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport { Grid, Slider } from '@material-ui/core';\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer__left\">\n                <img src=\"\" alt=\"\" />\n                <div className=\"footer__songInfo\">\n                    <h4>Yeah!</h4>\n                    <p>Usher</p>\n\n                </div>\n            </div>\n            <div className=\"footer__center\">\n                <ShuffleIcon className=\"footer__green\" />\n                <SkipPreviousIcon className=\"footer__icon\" />\n                <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\n                <SkipNextIcon className=\"footer__icon\" />\n                <RepeatIcon className=\"footer__green\" />\n\n            </div>\n            <div className=\"footer__right\">\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon />\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider ></Slider>\n\n                    </Grid>\n\n                </Grid>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport './Player.css';\nimport Sidebar from './Sidebar';\nimport Body from '../component/Body';\nimport Footer from '../component/Footer';\nfunction Player({spotify}) {\n    return (\n        <div className=\"player\">\n            <div className=\"player__body\">\n                <Sidebar />\n                <Body spotify={spotify}/>\n                \n                  \n            </div>\n            <Footer />\n            \n        </div>\n    )\n}\n\nexport default Player\n","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport Login from './component/Login';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { useDataLayerValue} from \"./DataLayer\";\nimport Player from './component/Player';\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{user,token}, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash =getTokenFromUrl();\n    window.location.hash=\"\";\n    const _token =hash.access_token;\n    console.log(_token);\n\n\n    if(_token)\n    {\n     // spotify.setAccessToken(_token);\n      dispatch({\n        type:\"SET_TOKEN\",\n        token:_token,\n      });\n      \n      spotify.setAccessToken(_token);\n      spotify.getMe().then(user =>{\n        console.log('user',user);\n        dispatch({\n          type:'SET_USER',\n          user:user\n        });\n      });\n      spotify.getUserPlaylists().then((playlists) =>{\n        dispatch({\n          type:'SET_PLAYLISTS',\n          playlists:playlists,\n        });\n      });\n      spotify.getPlaylist('3aTXQQrYO6zuPEC5pcDD1A').then(response =>\n        dispatch({\n          type:\"SET_DISCOVER_WEEKLY\",\n          discover_weekly:response,\n        })\n        );\n\n    }  \n  }, [token,dispatch])\n\n  console.log('user',user);\n\n  return (\n    <div className=\"app\">\n      { token?<Player spotify={spotify} /> : <Login />  }\n      \n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\n    user:null,\n    playlists:[],\n    playing:false,\n    //   items:null,\n     //   token:\"xgjk5cirqinp5axuepfvk3y85\",\n};\n\nconst reducer = (state,action) => {\n console.log(action);\n  \n  switch(action.type){\n      case 'SET_USER':\n          return {\n              ...state,\n              user:action.user\n          };\n      case 'SET_TOKEN':\n          return{\n              ...state,\n              token:action.token\n          };\n      case 'SET_PLAYLISTS':\n          return{\n              ...state,\n              playlists:action.playlists\n          };\n     case 'SET_DISCOVER_WEEKLY':\n         return{\n             ...state,\n             discover_weekly:action.discover_weekly,\n         };\n      default:\n          return state;\n  }\n\n}\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataLayer } from \"./DataLayer\";\nimport reducer,{initialState} from \"./reducer\";\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}